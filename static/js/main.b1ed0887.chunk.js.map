{"version":3,"sources":["components/StarRating.js","components/ProductCard.js","components/ProductsList.js","components/Navbar.js","components/Home.js","components/ProductDescription.js","components/CartItem.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["StarRating","props","rating","rate","starRatedColor","numberOfStars","name","starDimension","ProductCard","className","src","data","product_image","alt","product_title","product_price","product_rating","ProductsList","map","product","to","id","key","Navbar","price","Home","ProductDescription","routerProps","updatePrice","find","element","match","params","product_description","onClick","toast","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","CartItem","console","log","cartItem","quantity","Cart","cartArray","clearItems","length","App","useState","setData","setPrice","setCartArray","useEffect","fetch","then","res","json","productPrice","cartProduct","newCart","itemInCart","item","push","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6SAiBeA,EAdI,SAACC,GAChB,OACI,6BACC,kBAAC,IAAD,CACCC,OAAQD,EAAME,KACdC,eAAe,SACfC,cAAe,EACfC,KAAK,SACLC,cAAc,WCKTC,EAbK,SAACP,GACjB,OACI,yBAAKQ,UAAU,eACX,yBAAKA,UAAU,UACX,yBAAKC,IAAKT,EAAMU,KAAKC,cAAeC,IAAI,MAE5C,4BAAKZ,EAAMU,KAAKG,eAChB,2BAAIb,EAAMU,KAAKI,cAAf,QACA,kBAAC,EAAD,CAAYZ,KAAMF,EAAMU,KAAKK,mB,OCU1BC,EAjBM,SAAChB,GAClB,OACI,yBAAKQ,UAAU,kBACX,yBAAKA,UAAU,iBAAf,2DACA,yBAAKA,UAAU,gBAEPR,EAAMU,KAAKO,KAAI,SAAAC,GAAO,OAClB,kBAAC,IAAD,CAAMC,GAAE,mBAAcD,EAAQE,KAC1B,kBAAC,EAAD,CAASC,IAAKH,EAAQE,GAAIV,KAAMQ,W,OCQ7CI,EAjBA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACI,yBAAKf,UAAU,UACX,6BACI,4BACI,4BAAI,kBAAC,IAAD,CAAMW,GAAG,KAAI,yBAAKV,IAAI,mHAC1B,4BAAI,kBAAC,IAAD,CAAMU,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,WAGZ,6BACI,qCAAWI,EAAX,WCHDC,EARF,SAACxB,GACV,OACI,6BACI,kBAAC,EAAD,CAAcU,KAAMV,EAAMU,S,QCyCvBe,G,MA1CY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAahB,EAAwB,EAAxBA,KAAMiB,EAAkB,EAAlBA,YACvCT,EAAUR,EAAKkB,MAAK,SAAAC,GAAO,OAC7BA,EAAQT,MAAQM,EAAYI,MAAMC,OAAOX,MAS7C,OACKF,EAIG,yBAAKV,UAAU,wBACX,yBAAKA,UAAU,oBACX,yBAAKC,IAAKS,EAAQP,cAAeC,IAAI,KACrC,kBAAC,EAAD,CAAYV,KAAMgB,EAAQH,kBAE9B,yBAAKP,UAAU,eACX,4BAAKU,EAAQL,eACb,2BAAIK,EAAQc,qBACZ,2BAAId,EAAQJ,eACZ,4BAAQmB,QAlBJ,WAChBN,EAAYT,EAAQJ,cAAeI,GAHlBgB,YAAM,2BAoBX,eACA,kBAAC,IAAD,CACIC,SAAS,aACTC,UAAW,KACXC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,MApBxB,2CCLGC,EAZE,SAAC3C,GAEd,OADA4C,QAAQC,IAAI7C,GAER,yBAAKQ,UAAU,OACX,yBAAKA,UAAU,OAAOR,EAAM8C,SAASjC,eACrC,yBAAKL,UAAU,OAAOR,EAAM8C,SAAShC,eACrC,yBAAKN,UAAU,OAAOR,EAAM8C,SAASC,YCiBlCC,EAtBF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAW1B,EAAwB,EAAxBA,MAAO2B,EAAiB,EAAjBA,WAC9B,OACI,6BACI,6BACKD,EAAUE,OAAS,GAAK,4BAAQlB,QAASiB,GAAjB,eAEP,IAArBD,EAAUE,OAEP,uDAEA,gCACI,yBAAK3C,UAAU,OAAf,WACA,yBAAKA,UAAU,OAAf,cACA,yBAAKA,UAAU,OAAf,aAGPyC,EAAUhC,KAAI,SAAA6B,GAAQ,OAAI,kBAAC,EAAD,CAAUA,SAAUA,OAC/C,qCAAWvB,EAAX,UCqCG6B,MAhDf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAEN3C,EAFM,KAEA4C,EAFA,OAGaD,mBAAS,GAHtB,mBAGN9B,EAHM,KAGCgC,EAHD,OAIqBF,mBAAS,IAJ9B,mBAINJ,EAJM,KAIKO,EAJL,KAYbC,qBAAU,WALRC,MAAM,wDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAjD,GAAI,OAAI4C,EAAQ5C,QAKvB,IAEH,IAAMiB,EAAc,SAACmC,EAAcC,GACjCR,EAAShC,EAAQuC,GACjB,IAAIE,EAAO,YAAOf,GACdgB,EAAaD,EAAQpC,MAAK,SAAAsC,GAAI,OAAIH,EAAY3C,KAAO8C,EAAK9C,MAC1D6C,EACFA,EAAWlB,YAEXkB,EAAU,eACLF,EADK,CACQhB,SAAU,IAE5BiB,EAAQG,KAAKF,IAEfT,EAAaQ,IAGTd,EAAa,WACjBM,EAAa,IACbD,EAAS,IAGX,OACE,yBAAK/C,UAAU,OACb,kBAAC,EAAD,CAAQe,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,CAAM5D,KAAMA,OAChD,kBAAC,IAAD,CAAO2D,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,CAAM/C,MAAOA,EAAO0B,UAAWA,EAAWC,WAAYA,OACxF,kBAAC,IAAD,CAAOmB,KAAK,eAAeC,OAAQ,SAAC5C,GAAD,OAAiB,kBAAC,EAAD,CAAoBA,YAAaA,EAAahB,KAAMA,EAAMiB,YAAaA,UCvC/G4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2DCXN6C,IAASL,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFM,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxC,QAAQwC,MAAMA,EAAMC,c","file":"static/js/main.b1ed0887.chunk.js","sourcesContent":["import React from 'react';\nimport StarRatings from 'react-star-ratings';\n\nconst StarRating = (props) => {\n    return ( \n        <div>\n         <StarRatings\n          rating={props.rate}\n          starRatedColor=\"yellow\"\n          numberOfStars={5}\n          name='rating'\n          starDimension='20px'\n        />\n        </div>\n    )\n}\n\nexport default StarRating;","import React from 'react';\nimport StarRating from './StarRating';\n\nconst ProductCard = (props) => {\n    return (\n        <div className='productCard'>\n            <div className='imgDiv'>\n                <img src={props.data.product_image} alt=\"\" />\n            </div>\n            <h4>{props.data.product_title}</h4>\n            <p>{props.data.product_price} EUR</p>\n            <StarRating rate={props.data.product_rating} />\n        </div>\n    )\n}\n\nexport default ProductCard;","import React from 'react';\nimport Product from './ProductCard';\nimport { Link } from 'react-router-dom';\n\nconst ProductsList = (props) => {\n    return (\n        <div className='cardsContainer'>\n            <div className='productsTitle'>The most unique products for your pets, don't miss out!</div>\n            <div className='productsList'>\n                {\n                    props.data.map(product => (\n                        <Link to={`/product/${product.id}`}>\n                            <Product key={product.id} data={product} />\n                        </Link>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ProductsList;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = ({ price }) => {\n    return (\n        <div className='navbar'>\n            <div>\n                <ul>\n                    <li><Link to='/'><img src='https://res.cloudinary.com/dw4g9x8wv/image/upload/v1597950293/Screenshot_from_2020-08-20_20-03-00_qnrngz.png' /></Link></li>\n                    <li><Link to='/'>Home</Link></li>\n                    <li><Link to='/cart'>Cart</Link></li>\n                </ul>\n            </div>\n            <div>\n                <p>Total: {price} EUR</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport ProductsList from './ProductsList';\n\nconst Home = (props) => {\n    return(\n        <div>\n            <ProductsList data={props.data} />\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport StarRating from './StarRating';\n\nconst ProductDescription = ({ routerProps, data, updatePrice }) => {\n    const product = data.find(element => (\n        element.id === +routerProps.match.params.id\n    ))\n\n    const notify = () => toast(\"Item added to cart :)\");\n\n    const handleClick = () => {\n        updatePrice(product.product_price, product)\n        notify()\n    }\n    return (\n        !product\n            ?\n            <p>loading...</p>\n            :\n            <div className='descriptionContainer'>\n                <div className='descriptionImage'>\n                    <img src={product.product_image} alt=\"\" />\n                    <StarRating rate={product.product_rating} />\n                </div>\n                <div className='description'>\n                    <h1>{product.product_title}</h1>\n                    <p>{product.product_description}</p>\n                    <p>{product.product_price}</p>\n                    <button onClick={handleClick}>add to cart</button>\n                    <ToastContainer\n                        position=\"top-center\"\n                        autoClose={1500}\n                        newestOnTop={false}\n                        closeOnClick\n                        rtl={false}\n                        pauseOnFocusLoss\n                        draggable\n                        pauseOnHover\n                    />\n                </div>\n            </div>\n    )\n\n}\n\nexport default ProductDescription;","import React from 'react';\n\nconst CartItem = (props) => {\n    console.log(props);\n    return (\n        <div className=\"row\">\n            <div className='col'>{props.cartItem.product_title}</div>\n            <div className='col'>{props.cartItem.product_price}</div>\n            <div className='col'>{props.cartItem.quantity}</div>\n\n        </div>\n    )\n}\n\nexport default CartItem;","import React, { useState } from 'react';\nimport CartItem from './CartItem';\n\nconst Cart = ({ cartArray, price, clearItems }) => {\n    return (\n        <div>\n            <div>\n                {cartArray.length > 0 && <button onClick={clearItems}>Clear Cart</button>}\n            </div>\n            {cartArray.length === 0\n                ?\n                <div>Shopping Cart Empty :(</div>\n                :\n                <header>\n                    <div className='col'>Product</div>\n                    <div className='col'>Unit Price</div>\n                    <div className='col'>Quantity</div>\n                </header>\n            }\n            {cartArray.map(cartItem => <CartItem cartItem={cartItem} />)}\n            <p>Total: {price} EUR</p>\n        </div>\n    )\n}\n\nexport default Cart;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ProductsList from './components/ProductsList';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport ProductDescription from './components/ProductDescription';\nimport Cart from './components/Cart';\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [cartArray, setCartArray] = useState([])\n\n  const fetchData = () => {\n    fetch('https://floating-temple-56492.herokuapp.com/products')\n      .then(res => res.json())\n      .then(data => setData(data))\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  const updatePrice = (productPrice, cartProduct) => {\n    setPrice(price + productPrice);\n    let newCart = [...cartArray];\n    let itemInCart = newCart.find(item => cartProduct.id === item.id);\n    if (itemInCart) {\n      itemInCart.quantity++\n    } else {\n      itemInCart = {\n        ...cartProduct, quantity: 1\n      }\n      newCart.push(itemInCart)\n    }\n    setCartArray(newCart)\n  }\n\n  const clearItems = () => {\n    setCartArray([])\n    setPrice(0)\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar price={price} />\n      <Switch>\n        <Route exact path='/' render={() => <Home data={data} />} />\n        <Route path='/cart' render={() => <Cart price={price} cartArray={cartArray} clearItems={clearItems} />} />\n        <Route path='/product/:id' render={(routerProps) => <ProductDescription routerProps={routerProps} data={data} updatePrice={updatePrice} />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}